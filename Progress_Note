May 18th, 2022
- Create Wilson's Algorithm.ipynb (started May 16th, 2022)
- Implementing the algorithm based on 3x3 sparse Matrix (Not yet completed)
- Problem: the output should be the coordinate of matrix that already visited and transform into sparse matrix representing network (still not achieved)

May 19th, 2022
- Rename Wilson's Algorithm.ipynnb to Loop-erased RW_draft.ipynb for avoiding confusion
- Need modify some steps in cont_LERW to correctly return the result

May 22th, 2022
- Revisit the idea of spanning tree and study the implementation for other famous algorithms
- Draft the implementation when using Wilson's algorithm
- Try several approaches to get the first step of Wilson's: Fix two random nodes and perform random walk from one to another without loops

May 24th, 2022
- Complete the draft algorithm that achieves generating the spanning tree from undirected connected graph (unweighted)
- Consolidate all steps into a function "sample_spanning_tree" and validate the script
- (Next plan) consider the weighted graph and minimum spanning tree

May 26th, 2022
- Issue: find out how to generate the new path after obtaining the initial path
- The script is too complex. Need to revisit and, probably, reconstruct

May 28th, 2022
- Continue fixing bugs

May 29th, 2022
- Reconstruct the function that achieves generating spanning tree
- Find out some issue that function does not properly generate some edge cases

May 30th, 2022
- Issues from May 28th and 29th are resolved!
- Validate the result and it seems valid
- Keep performing some validation

May 31st, 2022
- Fixed some edge cases bugs
- Add new function to sanity check that complete graph input should give us uniform spanning tree
- The function seems to give us uniform spanning tree

June 8-10, 2022
- Create a new jupyter notebook named "Wilson's Algorithm-with-description" which explains how script works step-by-step

June 18, 2022
- Create a draft of degree computation from a spanning tree

June 25, 2022
- Finish computing degree and start plotting and taking a look at CDF of degrees from many independent spanning trees
- Issue: find out the aggregation methods for CDFs

Jul 5, 2022
- Generate many independent spanning trees, calculate their degrees, and plot the CDFs
- Find the average of each degree's CDF

Jul 18, 2022
- Create line plots for cdf distribution based on completed graph
- Create histograms for pdf (n = 10 to 500)
- Issue: program takes too long

Jul 25, 2022
- Requirement: consider maximum degree among the spanning trees
- Create a single line plot based on 100 spanning trees generated from completed graphs with different nodes

Aug 20, 2022
- Requirement: consider the variability of the maximum degree by repeating the experiment
- Create a line plot with an error (standard deviation) indicating the variability of the maximum degrees
- Issue: not efficiently run for the very large n

Sep 5, 2022
- Profile on the code to see where is the part of code that takes too long
- It appears that when generating larger nodes using sample_spanning_tree takes too much time
- First notice: using a lot of lists and append tons of elements into the list

Sep 7-13, 2022
- Try speeding up the code by using numpy array and more list comprehension
- Also, go through some part of the code and reconsider modify the algorithm (path analysis)
- Results: significantly better in performance
- Issue: still takes too long to run a very very large node (n = 5000)

November, 2022
- Successfully speeding up code
- Tried with completed graphs

January 7-18, 2023
- Start working on creating functions related to Prufer sequence
- Created function "prufer_to_tree" and "tree_to_prufer" with several sanity checkings
- Result: everything currently works well (Tried encoding and decoding several different sequences)